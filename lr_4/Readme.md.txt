1) git push 
2) git clone 
3) git merge 
4) go to submodule -> git merge -> go back -> git merge 
5) Файлы находятся на каждом из компьютеров 
6) Преимущества: • Каждый из разработчиков работает со своим собственным репозиторием;
 • Решение по слиянию ветвей принимается руководителем проекта; • Нет необходимости в сетевом соединении; 
7)Недостатки: • невозможно контролировать доступ к файлам; • отсутствует общая нумерация версий файлов; 
• требуется гораздо больше дискового пространства на сервере для хранения всех ветвей как глобальных, так и локальных; 
• отсутствует возможность блокировки файлов. 
8)Репозиторий – это сервер, с которого можно загрузить и хранить программное обеспечение. 
9) Распределенные системы отвечают за контроль и виртуализацию промышленных действий. 
10) Это обновление рабочей копии проекта, когда другие пользователи внесли в нее какие-либо изменения. 
11)Фиксация изменений проекта – это результат слияния ветвей. 
12)Модификация проекта – это улучшение проекта и добавление к нему изменений. 
13)Ветви обычно используют для хранения экспериментальных, незавершенных и полностью рабочих версий проекта. 
14)Команда git merge выполняет слияние отдельных направлений разработки, созданных с помощью команды git branch, 
в единую ветвь. 15)Если один пользователь внесет изменения в документ и выполнит слияние, то конфликта не будет.
Но если после этого другой пользователь изменит документ в тех же строчках, что и первый, то возникнет конфликт. 
16)Если у вас нет локальных изменений, слияние произойдет само собой. Если же у вас есть локальные изменения, 
Git автоматически произведет слияние и сообщит о любых конфликтах. 17) Приводит ли удаление и изменение одного 
и того же файла или каталога в разных версиях к конфликту при их слиянии? Нет, не приводи.